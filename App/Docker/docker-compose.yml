version: "3.8"
services:
  mysqldb:
    image: "mysql:8.0"
    container_name: db_${APP_NAME}_${ENVIRONMENT}
    restart: always
    ports:
      - "${MYSQL_PORT_MAP}:3306"
    networks:
      - local_network
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  app:
    container_name: ${APP_NAME}_${ENVIRONMENT}
    build:
      context: ../
      dockerfile: Docker/Dockerfile
    restart: always
    ports:
      - "${APP_PORT_MAP}:8080"
    networks:
      - local_network
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://db_${APP_NAME}_${ENVIRONMENT}:3306/${MYSQL_DATABASE}?allowPublicKeyRetrieval=true&useSSL=false"
    depends_on:
      - mysqldb
    volumes:
      - ../managementsystem/src:/home/app/src  # Mount source code directory
      - ../managementsystem/pom.xml:/home/app/pom.xml  # Mount pom.xml file
      - .m2:/root/.m2

  app_test:
    container_name: test_${APP_NAME}_${ENVIRONMENT}
    build:
      context: ../
      dockerfile: Docker/Dockerfile
      target: test
    depends_on:
      - app
    networks:
      - local_network
    command: mvn test
    volumes:
      - ../managementsystem/src:/home/app/src  # Mount source code directory
      - ../managementsystem/pom.xml:/home/app/pom.xml  # Mount pom.xml file

networks:
  local_network:
    name: ${NETWORK}
    driver: bridge
